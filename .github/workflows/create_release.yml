name: Create Releases
run-name: ${{ github.actor }} is creating a release
on:
  push:
    tags:
      - 'v*'
jobs:
  Build-Server:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up go
        uses: actions/setup-go@v5
        with:
          go-version: '1.24.2'
      - name: Install dependencies
        run: go get .
      - name: Build
        run: go build .
      - name: Check output
        run: ls -ahl
      - name: Upload output file
        uses: actions/upload-artifact@v4
        with:
          name: data-dashboard
          path: ./data-dashboard

  Build-Frontend:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Build front end
        uses: actions/setup-node@v4
        with:
          node-version: '22.14.0'
      - name: Build frontend
        run: cd ./frontend && npm install && npm run build && cd ../
      - name: Upload output folder
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: ./frontend/dist

  Zip-Up-Release:
    needs: [Build-Server, Build-Frontend]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Retrieve release assets server
        uses: actions/download-artifact@v4
        with:
          name: data-dashboard
      - name: Retrieve release assets frontend
        uses: actions/download-artifact@v4
        with:
          name: dist
          path: ./frontend/dist
      - name: Zip assets
        run: zip ./release.zip ./data-dashboard ./frontend/dist
      - name: Verify files exist
        run: ls -alh ./frontend/dist
      - name: Upload zip
        uses: actions/upload-artifact@v4
        with:
          name: release
          path: ./release.zip

  Create-Release:
    needs: Zip-Up-Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body: todo
          draft: false
          prerelease: false
      - name: Retrieve release assets
        uses: actions/download-artifact@v4
        with:
          name: release
      - name: Upload release
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets. GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./release.zip
          asset_name: release.zip
          asset_content_type: application/zip

